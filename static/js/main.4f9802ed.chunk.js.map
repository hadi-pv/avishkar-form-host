{"version":3,"sources":["Login.js","images/image3.png","Content.js","images/image2.png","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","userName","email","password","confirmPass","errors","handleInputChange","bind","handleSubmit","key","this","indexOf","event","target","name","value","obj","setState","preventDefault","trim","length","push","test","String","toLowerCase","window","location","Fragment","Form","className","Group","controlId","Label","Control","type","placeholder","hasError","onChange","Button","variant","onClick","Component","Content","alt","src","img","App","Row","Col","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f9802ed.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport {Form,Button} from 'react-bootstrap';\n\nclass Login extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          userName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPass: \"\",\n          errors: []\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      hasError(key) {\n        return this.state.errors.indexOf(key) !== -1;\n      }\n    \n      handleInputChange(event) {\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState(obj);\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();   \n        var errors = [];\n  \n        if (this.state.userName.trim().length<8) {\n            errors.push(\"userName\");\n          }\n    \n        const expression = /\\S+@\\S+/;\n        var validEmail = expression.test(String(this.state.email).toLowerCase());\n        if (!validEmail) {\n          errors.push(\"email\");\n        }\n        \n        if (this.state.password.trim().length<6) {\n            errors.push(\"password\");\n        }\n\n        if (this.state.password !== this.state.confirmPass) {\n            errors.push(\"confirmPass\");\n          }\n\n        this.setState({\n          errors: errors\n        });\n    \n        if (errors.length > 0) {\n          return false;\n        } else {\n          window.location=\"/content\";\n        }\n      }\n    render(){\n        return(\n            <React.Fragment>\n                <Form className=\"form-div\">\n                <h3>Avishkar-Form</h3>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupUserName\">\n                        <Form.Label >User Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter User Name\" className={\n                            this.hasError(\"userName\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"userName\"\n                            value={this.state.userName}\n                            onChange={this.handleInputChange}\n                        />\n                        <div className={\n                            this.hasError(\"userName\") ? \"inline-errormsg\" : \"hidden\"\n                            }\n                        >\n                            User Name should be atleast 8 characters\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" className={\n                            this.hasError(\"email\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                        />\n                        <div\n                            className={this.hasError(\"email\") ? \"inline-errormsg\" : \"hidden\"}\n                        >\n                            Email is invalid or missing\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" className={\n                            this.hasError(\"password\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"password\" \n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                        />\n                        <div\n                            className={this.hasError(\"password\") ? \"inline-errormsg\" : \"hidden\"}\n                        >\n                            Password should be atleast 6 characters\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupConfirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Confirm Password\" className={\n                            this.hasError(\"confirmPass\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"confirmPass\"\n                            value={this.state.confirmPass}\n                            onChange={this.handleInputChange}\n                        />\n                        <div\n                            className={this.hasError(\"confirmPass\") ? \"inline-errormsg\" : \"hidden\"}\n                        >\n                            Should match password\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"d-grid\" >\n                    <Button variant=\"primary\" type=\"submit\"  onClick={this.handleSubmit}>\n                        REGISTER\n                    </Button>\n                    </Form.Group>\n                </Form>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login;","export default __webpack_public_path__ + \"static/media/image3.33291967.png\";","import React from 'react';\nimport './App.css';\nimport img from './images/image3.png';\n\nconst Content=()=>{\n    return(\n        <React.Fragment>\n            <center className=\"content\">\n                <h1 className=\"congrats\">!CONGRATULATIONS!</h1>\n                <h2 className=\"content-text\">We Have Recieved Your Request</h2>\n                <img alt=\"yayy\" src={img} className=\"img-fluid image2\"/>\n            </center>\n        </React.Fragment>\n    )\n}\n\nexport default Content;\n\n","export default __webpack_public_path__ + \"static/media/image2.b3855550.png\";","import './App.css';\nimport {BrowserRouter,Switch,Route,Redirect} from 'react-router-dom';\nimport {Row,Col} from 'react-bootstrap';\nimport Login from './Login';\nimport Content from './Content';\nimport img from './images/image2.png';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Row className=\"topbar\">\n          <center>\n            <h4><b>AVISHKAR</b></h4>\n          </center>\n        </Row>\n        <Row>\n          <Col className=\"left d-none d-lg-block\">\n            <center>\n              <img alt=\"rocket\" src={img} className=\"image img-fluid\"/>\n            </center>\n          </Col>\n          <Col className=\"right\">\n          <Switch>\n          <Route exact path='/' component={()=><Login/>}/>\n          <Route exact path='/content' component={()=><Content/>}/>\n          <Redirect to='/'/>\n        </Switch>\n          </Col>\n        </Row>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}